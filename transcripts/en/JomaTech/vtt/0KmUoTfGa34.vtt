WEBVTT

1
00:00:23.750 --> 00:00:24.650
<v 1>For today's video,</v>

2
00:00:24.710 --> 00:00:29.060
we are going to do some mobile development and I don't mean developing for

3
00:00:29.061 --> 00:00:32.900
mobile. I mean, using a mobile device to develop,

4
00:00:33.410 --> 00:00:38.030
I am going to code and deploy a web app while using nothing more

5
00:00:38.300 --> 00:00:42.020
than a single phone. And my weapon of choice,

6
00:00:42.290 --> 00:00:46.790
the iPhone 11 pro max S plus limited

7
00:00:46.791 --> 00:00:49.070
edition two 56 gigabytes.

8
00:00:53.090 --> 00:00:57.260
There's an issue when I make videos. When I make a YouTube video,

9
00:00:57.290 --> 00:01:01.370
I have no idea if the thumbnails are interesting or not,

10
00:01:01.760 --> 00:01:06.350
I wish I can AB test them, but I can't. As you know,

11
00:01:06.351 --> 00:01:11.270
thumbnails are extremely important because it can make or break your video

12
00:01:12.560 --> 00:01:15.560
no matter how good your video is. If it doesn't get clicked,

13
00:01:15.800 --> 00:01:16.880
it doesn't get watched.

14
00:01:17.450 --> 00:01:22.280
So I wish I can test my thumbnails to a small audience before I

15
00:01:22.281 --> 00:01:23.114
publish it.

16
00:01:23.630 --> 00:01:27.890
So I had an idea why not create a web app where people can decide between two

17
00:01:27.891 --> 00:01:28.610
thumbnails,

18
00:01:28.610 --> 00:01:32.990
which would the read or click and use that information to build a ranking system

19
00:01:33.200 --> 00:01:35.720
of your thumbnails and other people's thumbnails.

20
00:01:35.960 --> 00:01:40.730
So you can know how well you rank against others probably wouldn't work

21
00:01:40.760 --> 00:01:43.610
because people don't want to click dumb thumbnails for no reasons.

22
00:01:44.360 --> 00:01:48.410
It doesn't matter if it's a pet project, whatever it's settled,

23
00:01:48.560 --> 00:01:51.650
we are ranking thumbnails. And to do that,

24
00:01:51.980 --> 00:01:55.010
I need a ranking algorithm. Yep.

25
00:01:55.850 --> 00:01:57.830
I need an algorithm.

26
00:01:59.120 --> 00:02:00.020
<v 0>Can you just tell me that it was BS,</v>

27
00:02:00.021 --> 00:02:04.010
reading off a total of 400 at any given time from now he has reading our eight.

28
00:02:04.040 --> 00:02:05.330
Some of the B has writing RB.

29
00:02:06.050 --> 00:02:07.880
<v 1>When any two thumbnails are matched up,</v>

30
00:02:07.910 --> 00:02:10.100
there's an expectation of who will win based on their current rate.

31
00:02:10.580 --> 00:02:14.360
<v 0>Right? Yep. And those expectations are expressed this way. All right,</v>

32
00:02:14.540 --> 00:02:15.373
let's call it.

33
00:02:18.860 --> 00:02:23.780
<v 1>Oregon. And he is stack. And I think I found the perfect candidate. No,</v>

34
00:02:23.781 --> 00:02:26.270
J S she is a wild card.

35
00:02:26.420 --> 00:02:31.340
Sometimes she makes no sense, but God I'd be lying to you.

36
00:02:31.460 --> 00:02:35.810
If I said she isn't high performance with that single threaded event driven

37
00:02:35.811 --> 00:02:36.644
architecture,

38
00:02:36.710 --> 00:02:41.300
you cannot deny her abilities to handle multiple simultaneous connections

39
00:02:41.810 --> 00:02:43.760
alone. She's pretty impressive already,

40
00:02:44.000 --> 00:02:46.400
but paired for web framework mindblowing,

41
00:02:46.820 --> 00:02:51.800
and nobody else makes no Jess shine brighter than this one express a

42
00:02:51.801 --> 00:02:55.340
lightweight, no J S wet application framework together.

43
00:02:55.460 --> 00:02:57.740
They aren't the definition of synergy.

44
00:02:59.020 --> 00:03:00.550
And then there's Mongo DB,

45
00:03:01.270 --> 00:03:05.170
the supplier stores and distributes data like no one else,

46
00:03:05.440 --> 00:03:07.870
highly available, highly scalable,

47
00:03:08.680 --> 00:03:12.490
finally angular J S the face of the operation.

48
00:03:13.000 --> 00:03:15.550
If you ever need a con man, he's your guy.

49
00:03:15.910 --> 00:03:18.970
And together they form the beat stack.

50
00:03:24.960 --> 00:03:28.740
So basically we want a web server,

51
00:03:29.610 --> 00:03:32.580
no JS web server, you know,

52
00:03:32.610 --> 00:03:37.170
when you use express also, and then for the front end,

53
00:03:37.530 --> 00:03:39.600
we're going to want angular. So,

54
00:03:39.740 --> 00:03:43.980
so I'm essentially creating a simple diagram of a typical mean stack as a

55
00:03:43.981 --> 00:03:48.480
skeleton, and then filling in more things like my model is schema.

56
00:03:48.960 --> 00:03:50.280
So for our thumbnail,

57
00:03:50.310 --> 00:03:54.150
we're going to be needing the URL of the YouTube URL,

58
00:03:54.180 --> 00:03:57.210
and then maybe like a rating so that we can actually rank them.

59
00:03:57.690 --> 00:03:58.590
We did our title,

60
00:03:58.620 --> 00:04:03.360
and then also the image URL so that we can actually access the thumbnail.

61
00:04:03.630 --> 00:04:05.280
So that's going to be our model.

62
00:04:07.020 --> 00:04:11.940
Now I continue to put details and start expanding by adding things like

63
00:04:11.941 --> 00:04:16.080
the services that I will use and how these services will interact with each

64
00:04:16.081 --> 00:04:17.310
other. For example,

65
00:04:17.311 --> 00:04:21.600
we have Heroku a platform as a service to host our node JS

66
00:04:21.630 --> 00:04:25.290
application. So we don't need to deal with servers M lab,

67
00:04:25.380 --> 00:04:27.030
a database as a service.

68
00:04:27.060 --> 00:04:31.380
So we don't need to maintain our own database and the AWS servers.

69
00:04:31.381 --> 00:04:35.340
So I can actually use a normal operating system like coupon to,

70
00:04:35.520 --> 00:04:38.520
since iOS isn't made to code on,

71
00:04:39.210 --> 00:04:42.660
you're not going to be able to use your phone as a computer,

72
00:04:42.840 --> 00:04:46.770
but you can SSH into that AWS server.

73
00:04:46.980 --> 00:04:50.130
And you can do that with an app called Terminus.

74
00:04:50.730 --> 00:04:52.830
I think it will be easier than I thought,

75
00:04:52.860 --> 00:04:56.100
because once you SSH into your AWS server,

76
00:04:56.340 --> 00:05:01.230
you're essentially controlling a computer and you can follow any tutorial as if

77
00:05:01.231 --> 00:05:05.970
you were on a desktop and just code like you would and Villa

78
00:05:06.360 --> 00:05:08.100
the diagram of our interests.

79
00:05:13.380 --> 00:05:17.220
Right. So I've set all my cameras up finally. Okay.

80
00:05:17.280 --> 00:05:21.540
That took a lot more effort than I thought. So let's start coding. Okay.

81
00:05:21.750 --> 00:05:25.860
So the first thing we want to do, as you know,

82
00:05:25.950 --> 00:05:28.830
I will be coding the whole app using only my phone.

83
00:05:29.070 --> 00:05:32.340
So from searching on the internet to coding and deploying the app,

84
00:05:32.730 --> 00:05:34.770
everything has to be done on the phone.

85
00:05:35.310 --> 00:05:39.960
So my goal is to set up a workable development environment and be able to push

86
00:05:39.961 --> 00:05:44.070
to some sort of production environment. So my plan is to do the following,

87
00:05:44.970 --> 00:05:47.010
generate a key pair for my phone,

88
00:05:47.011 --> 00:05:50.130
and then AWS server launched AWS.

89
00:05:50.910 --> 00:05:52.860
[inaudible] using my web browser on my phone.

90
00:05:53.280 --> 00:05:56.310
I says H into my ECE to using my phone,

91
00:05:56.610 --> 00:06:01.550
push a no JS app onto Heroku for production set up node

92
00:06:01.820 --> 00:06:06.500
Mon to develop faster locally and last but not least just coat the entire

93
00:06:06.501 --> 00:06:10.850
app. Easy. All right, let's see how I'm doing.

94
00:06:13.870 --> 00:06:16.600
<v 0>Copy that. Copy.</v>

95
00:06:17.500 --> 00:06:21.400
<v 1>All right. And then we can generate, wow. This is,</v>

96
00:06:21.700 --> 00:06:26.230
this is not very good on mobile, to be honest. Well, I mean,

97
00:06:26.260 --> 00:06:30.460
it's not their fault. It's not meant to be on mobile, but okay.

98
00:06:30.461 --> 00:06:32.710
So then now we're going to import keys.

99
00:06:32.860 --> 00:06:37.600
So basically I import the key pair into AWS so that I can use it when I launch a

100
00:06:37.601 --> 00:06:40.150
new [inaudible] instance, but launching it,

101
00:06:40.180 --> 00:06:43.630
isn't quite as easy of the UI on the foal.

102
00:06:44.470 --> 00:06:48.910
I can't see anything. I can't see. Okay. Well, um, I could see that kind of,

103
00:06:48.911 --> 00:06:52.930
I could kind of see the symbols. I want Uber one too, so, Oh, that's one.

104
00:06:53.410 --> 00:06:58.060
I think that's 18. Okay. I want the 16.04. This is, uh,

105
00:06:58.120 --> 00:06:58.953
I think,

106
00:07:05.380 --> 00:07:09.100
wait. All right, cool. I can't see. Okay.

107
00:07:09.101 --> 00:07:13.330
These buttons don't work. So for, this is our first obstacle.

108
00:07:14.560 --> 00:07:16.180
Um, Oh, let's try this.

109
00:07:18.620 --> 00:07:19.453
<v 0>Okay.</v>

110
00:07:20.950 --> 00:07:23.980
<v 1>All right. There we go. Easy. Okay.</v>

111
00:07:23.981 --> 00:07:28.900
So we're just going to launch this after I configured all my ports to be open

112
00:07:28.901 --> 00:07:31.960
to any IP address, because I'm promiscuous like that.

113
00:07:32.140 --> 00:07:36.460
I launched my ECE two and took a little ASM Mar break while I wait for it to

114
00:07:36.670 --> 00:07:37.503
boot up.

115
00:07:43.360 --> 00:07:44.200
<v 0>Oh my God.</v>

116
00:07:46.030 --> 00:07:48.070
<v 1>I then configured a new host for termi.</v>

117
00:07:48.090 --> 00:07:52.630
So I can SSH into my AWS server on my AWS server.

118
00:07:52.660 --> 00:07:55.270
I installed no JS installed Teamworks,

119
00:07:55.450 --> 00:07:59.110
pushed a starter app to Heroku and got node Mon to work.

120
00:07:59.111 --> 00:08:03.790
So I can quickly test my app indexes. Okay, cool.

121
00:08:04.240 --> 00:08:08.800
Let's change. Let's change the word. Getting started. That's due, right.

122
00:08:08.801 --> 00:08:10.600
Joma here. Okay.

123
00:08:10.960 --> 00:08:14.260
And then what we do now is we save the file.

124
00:08:15.450 --> 00:08:20.350
Okay. So now we saved the file. We refreshed us. Oh,

125
00:08:20.380 --> 00:08:24.640
excellent. Joma started on Heroku. Excellent. All right. So now we have it.

126
00:08:24.670 --> 00:08:29.320
So we can code here, could use VIM to code, and then we could like use node,

127
00:08:29.321 --> 00:08:30.280
want to keep running it.

128
00:08:30.281 --> 00:08:34.660
And we could look at this link to see if it works or not. Okay.

129
00:08:34.690 --> 00:08:38.080
So now I'm going to take a break cause like that took way too long for,

130
00:08:38.081 --> 00:08:41.170
what's supposed to take two minutes, but I, because I did on a phone,

131
00:08:41.171 --> 00:08:45.040
it took super long. I mean, I haven't figured out all the tricks yet,

132
00:08:45.070 --> 00:08:49.480
so maybe I'll figure that out while I code it. So, um, yeah.

133
00:08:49.690 --> 00:08:52.960
<v 0>Okay. I'll work on it.</v>

134
00:09:46.860 --> 00:09:47.693
[inaudible]

135
00:09:51.990 --> 00:09:55.380
the code can be separated into three parts. First, the backend,

136
00:09:55.590 --> 00:09:57.720
which I copy pasted from this tutorial,

137
00:09:57.930 --> 00:10:02.790
I just replaced the bear by thumb and modified the API appropriately for my

138
00:10:02.791 --> 00:10:07.260
needs. Then for the webpage, I just needed a simple bootstrap template,

139
00:10:07.590 --> 00:10:11.880
a few modifications, and some bytes CSS was sufficient. Lastly,

140
00:10:11.970 --> 00:10:13.680
our angular JS code,

141
00:10:13.980 --> 00:10:17.790
I put my data binds in the right places and I was able to connect my application

142
00:10:17.791 --> 00:10:18.870
data to the dome.

143
00:10:26.900 --> 00:10:30.980
<v 1>So, so basically my left thumb and my kind of my right thumb hurts,</v>

144
00:10:30.981 --> 00:10:33.290
but mostly my left. And, um, yeah,

145
00:10:33.291 --> 00:10:37.880
I think it's because I've been coding a project on my fault,

146
00:10:38.540 --> 00:10:41.300
right? Yeah. It's it's for a video. So,

147
00:10:41.480 --> 00:10:45.440
so I had to like call the whole project, like according to project on my phone.

148
00:10:45.650 --> 00:10:48.800
And then every time like I swipe to go to like Chrome and stuff like that.

149
00:10:48.980 --> 00:10:53.750
That's where it hurts. Like when I do this. Right. Um, okay.

150
00:10:54.920 --> 00:10:59.060
Um, when did it start? Uh, like maybe like two weeks ago.

151
00:10:59.240 --> 00:11:03.230
Cause that's when I started doing the coding project. Oh, okay. Well,

152
00:11:03.231 --> 00:11:06.320
have you considered that? Maybe it's related to how you're using your phone.

153
00:11:08.570 --> 00:11:12.090
Yeah, but I mean like, is there like any way where we can like type,

154
00:11:12.410 --> 00:11:16.460
felt pain because like I still have to do that project? No, I don't think so.

155
00:11:16.820 --> 00:11:19.100
I think you just have to stop using your phone so much.

156
00:11:23.450 --> 00:11:27.350
<v 0>I don't think I can finish this app on my phone.</v>

157
00:11:28.010 --> 00:11:31.580
Unfortunately, my thumb hurts and it hurts a lot.

158
00:11:31.970 --> 00:11:36.260
Every time I swipe or like I type, there's just this really sharp pain,

159
00:11:36.770 --> 00:11:38.510
right. There's really, really sharp pain.

160
00:11:38.900 --> 00:11:41.960
And I don't think I can continue doing this.

161
00:11:44.240 --> 00:11:47.120
Like it's probably not possible,

162
00:11:48.830 --> 00:11:53.680
but I mean, there is this one thing that I can do

163
00:11:55.240 --> 00:11:57.550
by really, really didn't want to rely on this,

164
00:11:59.680 --> 00:12:02.710
but I don't think I have any other choice.

165
00:12:06.270 --> 00:12:11.090
<v 1>This is great. I am loving it. Oh my God.</v>

166
00:12:11.130 --> 00:12:12.900
<v 0>I am blazing fast.</v>

167
00:12:15.030 --> 00:12:17.250
This is so good. Oh wow.

168
00:12:18.390 --> 00:12:20.520
This is probably the best thing that ever happened to me.

169
00:12:24.150 --> 00:12:26.010
All right. I am done.

170
00:12:26.790 --> 00:12:30.630
Let me show you a little demo now let's go here.

171
00:12:32.130 --> 00:12:34.200
<v 1>Yeah. It's pretty simple. As you can see,</v>

172
00:12:34.201 --> 00:12:37.200
I'm clicking these thumbnails and each time I click a thumbnail,

173
00:12:37.230 --> 00:12:42.090
it means the match has been won by that thumbnail. And if you click at the top,

174
00:12:42.120 --> 00:12:45.120
you get the result page and here you can see the results of your ranking.

175
00:12:45.420 --> 00:12:49.940
You can see it ratings and it's ordered by ratings, you know. Cool, cool,

176
00:12:49.941 --> 00:12:53.310
cool. You can add more thumbnails, actual,

177
00:12:53.320 --> 00:12:55.380
I'm going to delete all these thumbnails first.

178
00:12:57.660 --> 00:13:02.190
So here I pasted a YouTube URL and I get their thumbnail right here.

179
00:13:02.430 --> 00:13:06.990
I could also add my own thumbnail that is not attached to a

180
00:13:07.020 --> 00:13:10.170
YouTube video, you know, and give it a title tiger King.

181
00:13:12.510 --> 00:13:16.560
And there you go. And if you look at the main page,

182
00:13:16.590 --> 00:13:20.010
you'll see that these two thumbnails are going head to head. All right.

183
00:13:20.040 --> 00:13:24.660
And then after given a pink, a win, you'll see that the score has increased.

184
00:13:25.650 --> 00:13:29.610
So that's pretty much it very simple app with lots of potential to add more

185
00:13:29.611 --> 00:13:32.300
features. But for now, I'll just keep it at that.

186
00:13:32.340 --> 00:13:37.290
Keep it simple since it's supposed to be a toy project so I can show off my

187
00:13:37.380 --> 00:13:42.030
phone dev skills and uh, yeah. That's, uh, that's pretty much it.

188
00:13:42.270 --> 00:13:47.160
Yeah. All right. Well,

189
00:13:48.300 --> 00:13:52.470
I'm glad it's over. Um, yeah, I'm so done with my phone.

190
00:13:52.500 --> 00:13:55.830
Like my eyes hurt. My thumbs are, you know,

191
00:13:55.831 --> 00:14:00.030
I think I needed a digital cleanse and um, I think that's why I'm going to do,

192
00:14:00.720 --> 00:14:01.140
you know,

193
00:14:01.140 --> 00:14:06.060
I think I'm starting to appreciate disconnecting myself from the digital world,

194
00:14:06.600 --> 00:14:10.620
you know, not be so blinded by technology and the internet. I mean,

195
00:14:10.621 --> 00:14:14.760
especially social media, right? So maybe this is a good thing.

196
00:14:14.761 --> 00:14:18.300
Like maybe finally I could get some reading done.

197
00:14:18.900 --> 00:14:20.280
So I think that's what I'm going to do.

198
00:14:48.150 --> 00:14:52.190
<v 0>[Inaudible] Hey guys, I hope you've enjoyed this video. I definitely.</v>

199
00:14:52.220 --> 00:14:53.810
<v 2>Enjoyed making it. Uh,</v>

200
00:14:53.840 --> 00:14:57.650
I just want to say that if you're interested in getting into Fang companies,

201
00:14:57.890 --> 00:15:00.650
definitely check out the tech interview pro.com.

202
00:15:01.010 --> 00:15:05.090
It's an online training program and professional community created by technique.

203
00:15:05.120 --> 00:15:08.750
And I, uh, we teach you how to pass the technical interview,

204
00:15:08.780 --> 00:15:10.190
the behavioral interview,

205
00:15:10.550 --> 00:15:15.250
and you also get access to our private business groups where we give each other

206
00:15:15.251 --> 00:15:17.320
tips and review each other's resumes.

207
00:15:17.620 --> 00:15:21.880
You also get access to our live Q and A's where we answer all your questions.

208
00:15:22.300 --> 00:15:25.390
So I really hope to see you guys there. See ya.

