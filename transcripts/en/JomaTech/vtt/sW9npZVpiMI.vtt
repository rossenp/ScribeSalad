WEBVTT

1
00:00:52.410 --> 00:00:52.470
<v 0>[Inaudible].</v>

2
00:00:52.470 --> 00:00:54.810
<v 1>Nope, not Jesus. It's just me.</v>

3
00:00:56.490 --> 00:01:00.390
What the hell is going on? Oh yeah. Um, yeah,

4
00:01:00.391 --> 00:01:04.290
I was working on this program and, um, yeah, I, I think I figured it out.

5
00:01:04.291 --> 00:01:08.910
I think I got the formula. So basically if you merge the projection equation,

6
00:01:09.240 --> 00:01:13.620
wait, wait, wait, what are you doing? Oh, right.

7
00:01:14.790 --> 00:01:18.720
Okay. Let me just show you, let me just finish up real quick.

8
00:01:35.670 --> 00:01:36.503
<v 0>[Inaudible]</v>

9
00:01:47.980 --> 00:01:52.810
I don't follow it. It's incredible. Isn't it?

10
00:01:55.870 --> 00:01:56.980
<v 1>So all of this,</v>

11
00:01:57.430 --> 00:02:01.150
just to render a donut on your terminal.

12
00:02:04.420 --> 00:02:05.253
<v 2>One,</v>

13
00:02:06.600 --> 00:02:11.580
thanks for watching the idea and code work originally from the amazing and

14
00:02:11.581 --> 00:02:12.414
the Sloan,

15
00:02:12.600 --> 00:02:17.550
where he was able to coat this whole program in C and made the

16
00:02:17.551 --> 00:02:19.800
code itself, look like a donut.

17
00:02:20.550 --> 00:02:22.980
He has an article explaining how the code works,

18
00:02:23.220 --> 00:02:28.200
which I'll link in the description. So why is math important for programming?

19
00:02:28.590 --> 00:02:33.570
Well, it's because even if 99% of the time, you won't need it,

20
00:02:33.870 --> 00:02:36.120
there's a 1% chance that you might,

21
00:02:36.480 --> 00:02:41.100
and it's in those moments that separate out a great programmer from average

22
00:02:41.101 --> 00:02:43.380
ones. And if you do know your math,

23
00:02:43.920 --> 00:02:48.450
you'll know how to modify this donut to increase the size, changed a rotation,

24
00:02:48.630 --> 00:02:52.590
or even make a cube. Instead. Also,

25
00:02:52.650 --> 00:02:56.520
if you want to do computer graphics, machine learning or cryptography,

26
00:02:56.880 --> 00:03:00.280
you're going to need math. So might as well get good at it.

27
00:03:00.460 --> 00:03:04.350
As you did programming anyway, back to the donut,

28
00:03:04.740 --> 00:03:09.690
how do we write this program? Well, first you have to create a donut,

29
00:03:09.960 --> 00:03:12.480
which is essentially a solid of revolution,

30
00:03:12.660 --> 00:03:16.290
where we have a circle that rotates around the y-axis,

31
00:03:16.560 --> 00:03:19.740
which will make a donut, AKA a tourist.

32
00:03:20.460 --> 00:03:25.050
This is the formula to create the circle centered at our two with the

33
00:03:25.051 --> 00:03:26.400
radius R one.

34
00:03:26.970 --> 00:03:31.740
And this is the rotation matrix to rotate this circle around the Y

35
00:03:31.741 --> 00:03:34.020
axis. So when we combine them,

36
00:03:34.200 --> 00:03:37.320
we get the coordinates of every point on your donut.

37
00:03:38.190 --> 00:03:41.910
Now that we have a donut shut up, I know this is a bagel.

38
00:03:42.420 --> 00:03:43.800
Now that we have a donut,

39
00:03:43.860 --> 00:03:47.820
we want to rotate it around the X and Z axis.

40
00:03:47.880 --> 00:03:50.370
So it looks cool or flying and stuff.

41
00:03:51.120 --> 00:03:55.710
We can do that by multiplying our donut coordinates with these two rotation

42
00:03:55.711 --> 00:03:56.550
matrices.

43
00:03:57.420 --> 00:04:01.890
Now we have to map this 3d flying doughnut onto a 2d

44
00:04:01.891 --> 00:04:04.410
screen, which will become our terminal.

45
00:04:04.770 --> 00:04:09.180
So each character on the terminal will be a pixel on the screen

46
00:04:09.990 --> 00:04:12.270
to figure out how to shade our donut.

47
00:04:12.510 --> 00:04:15.090
We calculate the dot product of the surface,

48
00:04:15.091 --> 00:04:19.200
normal and the direction of the light. So as you can see,

49
00:04:19.320 --> 00:04:22.650
when the normal points this way, it's way brighter.

50
00:04:22.950 --> 00:04:25.530
And when it points it that way, it's a way darker.

51
00:04:25.860 --> 00:04:29.280
So the dot product will tell us how light or dark it is.

52
00:04:29.730 --> 00:04:34.080
We take the result of the dot product and map it into DS

53
00:04:34.081 --> 00:04:37.860
characters from darkest to brightest. And lastly,

54
00:04:37.890 --> 00:04:40.620
we draw that on our terminal and voila,

55
00:04:41.460 --> 00:04:43.140
if you like the way I teach,

56
00:04:43.170 --> 00:04:47.040
you can check out my new course on data structures and algorithms,

57
00:04:47.280 --> 00:04:51.960
where I use easy to understand animations, to explain these concepts,

58
00:04:52.710 --> 00:04:55.170
the first a hundred people to sign up for Joe mCLASS, uh,

59
00:04:55.380 --> 00:05:00.360
will get 15% off Joe mCLASS.

