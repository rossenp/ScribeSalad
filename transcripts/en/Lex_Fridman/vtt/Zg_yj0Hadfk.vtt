WEBVTT

1
00:00:02.970 --> 00:00:07.830
<v 0>Feels like now we're in this third stage where there's</v>

2
00:00:07.860 --> 00:00:11.970
a Chrome Firefox edge,

3
00:00:12.060 --> 00:00:15.150
I guess it's called and brave.

4
00:00:15.240 --> 00:00:19.650
And these are all seem like really exciting. I don't know,

5
00:00:19.680 --> 00:00:22.860
innovative browsers. They're all kind of copying off of each other,

6
00:00:22.861 --> 00:00:24.330
picking up the good stuff. Yeah.

7
00:00:24.380 --> 00:00:26.840
<v 1>There's evolution again, especially on tracking protection.</v>

8
00:00:26.841 --> 00:00:30.860
So privacy is this sort of global, um,

9
00:00:31.910 --> 00:00:34.940
wave that's rising. I like to call it a wave because it's a large,

10
00:00:35.420 --> 00:00:39.200
somewhat chaotic structure. It's not a unitary. Good.

11
00:00:39.201 --> 00:00:43.340
You can't say I'm buying privacy for, you know, $3. I'm paying $3 for privacy.

12
00:00:43.341 --> 00:00:46.580
Some people think of VPN does this and are disappointed when it fails them.

13
00:00:46.581 --> 00:00:51.470
But often people use VPNs for region unlocking video or getting the best Netflix

14
00:00:51.860 --> 00:00:55.970
capital. Exactly. Um, but privacy is, is not a unitary good it's complex.

15
00:00:55.971 --> 00:00:59.540
And people are understanding it only over time. And if they get burned,

16
00:00:59.541 --> 00:01:02.570
but there's a genie, that's not going back in the bottle. There,

17
00:01:02.571 --> 00:01:06.920
people are fed up. Apple has responded to this. Apple was always making Safari.

18
00:01:06.921 --> 00:01:10.940
I think more of a privacy branded browser from the very beginning.

19
00:01:10.941 --> 00:01:15.050
I think it was probably Steve jobs. Safari had private windows,

20
00:01:15.080 --> 00:01:18.740
private tabs before Firefox did. Um,

21
00:01:18.830 --> 00:01:23.600
and these are only private in the sense that they don't leave local traces. Uh,

22
00:01:23.630 --> 00:01:24.950
if you don't want them to turns out,

23
00:01:24.951 --> 00:01:27.530
Safari does keep them around between shutdown,

24
00:01:27.740 --> 00:01:31.850
but the canonical model is no local traces after you closed the private window.

25
00:01:32.390 --> 00:01:34.850
No, no leftover traces that you went to, you know,

26
00:01:34.910 --> 00:01:38.660
some site that you were embarrassed by or bought a gift for somebody you wanted

27
00:01:38.661 --> 00:01:40.070
to keep secret. Um.

28
00:01:40.820 --> 00:01:42.380
<v 0>But there's still some level of tracking.</v>

29
00:01:42.650 --> 00:01:45.890
<v 1>There's network tracking there's network.</v>

30
00:01:45.891 --> 00:01:49.570
Privacy is not guaranteed at all because you're using the same internet and ISP

31
00:01:49.850 --> 00:01:53.510
as a public window, a non-private window. But sorry, had that early on,

32
00:01:53.511 --> 00:01:58.430
they also have a cookie blocking policy that might take a little explaining

33
00:01:58.431 --> 00:02:00.410
when you, if you know what a cookie is.

34
00:02:00.411 --> 00:02:03.290
It's a little bit of storage in the browser indexed by the name of the site.

35
00:02:04.010 --> 00:02:08.390
And it's really only the main name of the site, like be Aveda or, um,

36
00:02:09.350 --> 00:02:12.950
you know, uh, something like, uh, npr.org. Um,

37
00:02:14.330 --> 00:02:16.580
every site can store some information in a cookie.

38
00:02:16.581 --> 00:02:19.130
Every time it's contacted by the browser.

39
00:02:19.220 --> 00:02:23.120
The previous version is sent back and in the response from the server,

40
00:02:23.390 --> 00:02:24.320
the cookies updated.

41
00:02:24.650 --> 00:02:28.190
So it's this little bit of storage in the browser that the site can keep

42
00:02:28.250 --> 00:02:32.690
updating and it can store an encrypted version of your login

43
00:02:32.691 --> 00:02:34.430
credentials with timestamps.

44
00:02:34.430 --> 00:02:38.990
So you can stay logged in without having to re type your password every time you

45
00:02:38.991 --> 00:02:41.420
navigate, which is how it would be. If you didn't have cookies.

46
00:02:42.260 --> 00:02:43.550
Those web protocols,

47
00:02:44.150 --> 00:02:46.610
especially in the nineties are so-called stateless protocols.

48
00:02:46.611 --> 00:02:48.980
So you go to your bank, you log in,

49
00:02:49.370 --> 00:02:52.730
you go from your login confirmed page to your accounts view.

50
00:02:53.030 --> 00:02:54.770
If you didn't have a cookie, you'd be logging in again,

51
00:02:55.580 --> 00:02:58.460
every time you type in something. So that was the great thing about cookies,

52
00:02:58.850 --> 00:03:00.430
lumens, really it in a hurry in 1994,

53
00:03:00.431 --> 00:03:03.640
before I joined that scape and he did it for really holding that kind of

54
00:03:03.910 --> 00:03:05.380
credential. Um,

55
00:03:05.440 --> 00:03:09.760
but even then there was the image element embedded in the page and the image

56
00:03:09.790 --> 00:03:12.130
gets fetched possibly from a different server.

57
00:03:12.610 --> 00:03:15.910
And that request carries the last cookie, which could be empty at first.

58
00:03:16.360 --> 00:03:18.280
And the response carries the updated cookie.

59
00:03:18.580 --> 00:03:20.350
So just by having images and cookies,

60
00:03:20.470 --> 00:03:24.310
you have tracking because that image server can be serving a little one by one

61
00:03:24.311 --> 00:03:26.530
pixel and they still use the word pixel on ad tech.

62
00:03:27.100 --> 00:03:31.060
And that pixel can be served from the same server embedded differently with

63
00:03:31.061 --> 00:03:34.360
different URL spellings in the New York times. And ESPN,

64
00:03:34.361 --> 00:03:37.600
as you go from one to the other, the image server can say,

65
00:03:37.601 --> 00:03:39.580
I haven't got a cookie for you. It's empty. Initially,

66
00:03:39.581 --> 00:03:41.860
I'm going to assign you user number one, two, three, four,

67
00:03:41.861 --> 00:03:44.470
and then put a database entry in. And I see, by the way,

68
00:03:44.471 --> 00:03:45.970
I was fetched the name of the path,

69
00:03:46.000 --> 00:03:47.800
part of the URL that I was in the New York times.

70
00:03:48.040 --> 00:03:51.580
So you're in New York times reader, and then you hit ESPN, same thing,

71
00:03:51.581 --> 00:03:54.820
and the database gets updated. And the number user one, two, three,

72
00:03:54.821 --> 00:03:58.210
four indexes in the database to a profile of you you've been trapped.

73
00:03:58.690 --> 00:04:01.510
This was not intended. And it was too late to undo.

74
00:04:01.511 --> 00:04:05.200
By the time I got the Netscape, um, I think Lou wanted to do Twinkies.

75
00:04:05.201 --> 00:04:07.660
He called them and he was trying to solve several problems.

76
00:04:07.990 --> 00:04:10.810
He wanted them to be bigger. Cause initially cookies had a short size limit.

77
00:04:11.110 --> 00:04:14.530
I think he wanted to solve the third-party problem. But Tom Peck,

78
00:04:14.680 --> 00:04:18.190
when the engineering manager that, Nope, no Twinkies, just cookies. We're done.

79
00:04:18.670 --> 00:04:22.090
You're done son. And, um, that's how a lot of that stuff was.

80
00:04:22.091 --> 00:04:25.180
That's how JavaScript, you know, um, got frozen,

81
00:04:25.181 --> 00:04:28.450
like a fly in Amber in some ways with that sloppy equality operator that I made

82
00:04:28.451 --> 00:04:32.050
because the early adopters and the cookie got stuck with this tracking hazard.

83
00:04:32.470 --> 00:04:35.950
And then because Java scripts can be like images. They're embedded in the page.

84
00:04:36.460 --> 00:04:38.920
By the time of Netscape three, I made that work. Uh,

85
00:04:39.220 --> 00:04:42.310
you can get a request with the last cookie value and the response updates.

86
00:04:42.430 --> 00:04:45.220
It that's a tracking mechanism and that's why you don't even need images to

87
00:04:45.221 --> 00:04:50.080
track. Now you just use scripts. So this whole tracking, uh, economy evolved.

88
00:04:50.590 --> 00:04:54.430
And it, it, it depended on these accidents of the nineties,

89
00:04:54.431 --> 00:04:55.900
these unintended consequences.

90
00:04:56.160 --> 00:04:58.440
<v 0>Great. Some of the richest companies in the world, right? I mean,</v>

91
00:04:58.530 --> 00:05:03.270
it's the social media. All I got was t-shirts all I got is this crappy t-shirt.

92
00:05:03.770 --> 00:05:06.720
Yeah. Uh, I mean, uh, so that's,

93
00:05:07.560 --> 00:05:09.870
that's the fundamental problem the world is facing.

94
00:05:09.871 --> 00:05:12.630
Now they're looking at what social media has created.

95
00:05:12.631 --> 00:05:17.130
And they're looking at a world of looking at itself in the mirror

96
00:05:17.580 --> 00:05:22.530
and seeing that privacy is actually something as opposed to like a nice

97
00:05:22.531 --> 00:05:23.880
thing to have.

98
00:05:24.120 --> 00:05:29.100
It's something that is actually should be fundamental to the way we interact

99
00:05:29.101 --> 00:05:31.200
with the world as part of our tooling.

100
00:05:31.201 --> 00:05:35.740
And that's where the brave browser comes in. And I suppose others as well,

101
00:05:36.060 --> 00:05:38.250
applying with this idea, but brave is at the forefront of that.

102
00:05:38.251 --> 00:05:42.570
So maybe can you describe what brave is and what are its key

103
00:05:42.571 --> 00:05:46.680
principles and what's broken? What is it brave trying to fix?

104
00:05:47.190 --> 00:05:50.400
<v 1>I realized that these accidents like the third-party cookie,</v>

105
00:05:50.460 --> 00:05:53.760
the image or script that's tracking you or the, um,

106
00:05:54.600 --> 00:05:58.550
the JavaScripts that can do an invisibly now that all stuff wasn't intended

107
00:05:59.300 --> 00:06:02.240
and that Firefox had supported extensions,

108
00:06:02.241 --> 00:06:05.540
that block some of these things I thought probably we should have browsers just

109
00:06:05.960 --> 00:06:09.260
block some of these things by default, these were not intended.

110
00:06:09.261 --> 00:06:12.290
And they're now unsafe. They're tracking you. There could be data breaches,

111
00:06:12.710 --> 00:06:15.440
mal where distribution, um, you know, uh,

112
00:06:15.500 --> 00:06:19.700
bullying and PSYOPs and other attacks on people. Um,

113
00:06:20.270 --> 00:06:24.920
block that stuff, block that JavaScript. I'm Dr. Frankenstein monster here,

114
00:06:25.280 --> 00:06:27.110
but obviously you go to Gmail.

115
00:06:27.111 --> 00:06:31.220
There's so much a script there to make that amazing web client that's okay.

116
00:06:31.221 --> 00:06:32.450
That's first party JavaScript.

117
00:06:32.780 --> 00:06:35.360
So how do you tell the first from the third party? And it's not easy,

118
00:06:35.361 --> 00:06:39.290
it's not a matter of just what's embedded from a different server because a lot

119
00:06:39.291 --> 00:06:44.090
of publishers use benign scripts from unrelated domains or apparently

120
00:06:44.091 --> 00:06:44.924
unrelated domains.

121
00:06:44.960 --> 00:06:48.110
So you ended up having to develop sort of human and machine learning,

122
00:06:48.111 --> 00:06:51.800
practice around blocking. And at brave,

123
00:06:51.801 --> 00:06:55.430
we did that from the start and built a research team to help drive it and

124
00:06:55.431 --> 00:06:59.510
automate it. We realized that protecting people needed machine-learning.

125
00:06:59.511 --> 00:07:03.290
And around 2017 spring, I talked to my friends at Apple about this too.

126
00:07:03.291 --> 00:07:06.980
And they were also doing what they call intelligent tracking prevention,

127
00:07:07.220 --> 00:07:11.810
which uses local machine learning in the browser. And the funny thing is we,

128
00:07:11.820 --> 00:07:13.430
you know, great, great minds think alike. We were,

129
00:07:13.490 --> 00:07:15.380
they were taking their third-party cookie blocker.

130
00:07:15.381 --> 00:07:18.830
That was insofar from the old days and making it not have a big loophole,

131
00:07:19.100 --> 00:07:22.610
because what they did was in 2003, when Sarah came out, they said,

132
00:07:22.611 --> 00:07:27.140
we're going to block cookies that are from those third party embedded

133
00:07:27.141 --> 00:07:29.690
elements where you've never visited that site before.

134
00:07:29.750 --> 00:07:32.960
So I'm going to pick it up and add company that got sold to at and T.

135
00:07:32.960 --> 00:07:35.750
So I'm not picking on anybody unfairly app, nexus.com.

136
00:07:35.751 --> 00:07:38.330
If you've ever been to app nexus.com. Nope. I had never been there,

137
00:07:38.420 --> 00:07:41.810
but I guarantee you 10 years ago, you probably had, if you're using Firefox,

138
00:07:41.811 --> 00:07:44.990
you had a cookie third party cookie, cause you were being tracked by them.

139
00:07:45.590 --> 00:07:49.160
And they were using that cookie to fill up a profile of you in Safari.

140
00:07:49.310 --> 00:07:52.580
As long as the user never went to app nexus, that cookie will not be set.

141
00:07:53.030 --> 00:07:56.210
And that was a real move for privacy early on, uh,

142
00:07:56.211 --> 00:07:57.830
when Joseph was still around in Safari,

143
00:07:58.250 --> 00:08:01.220
but it had this loophole that if you do go to app nexus,

144
00:08:01.221 --> 00:08:03.170
then why it's okay to be a third-party cookie.

145
00:08:03.171 --> 00:08:07.460
And so at nexus did something very naughty. They took their ad partners,

146
00:08:07.590 --> 00:08:10.280
put the actual ad, you click on. And they said, Hey,

147
00:08:10.430 --> 00:08:13.280
add a little script so that when somebody clicks on the ad,

148
00:08:13.281 --> 00:08:15.140
before it goes to your landing page,

149
00:08:15.141 --> 00:08:18.680
redirect to AppNexus and we'll redirect to the landing page. And by doing that,

150
00:08:18.681 --> 00:08:21.200
they set a first party cookie and they got waitlisted. So it was a loophole.

151
00:08:21.201 --> 00:08:25.340
They exploited intelligent tracking prevention and Safari was sophisticated

152
00:08:25.341 --> 00:08:29.150
enough to counteract this and it did other things and it's evolved since they

153
00:08:29.151 --> 00:08:31.190
did it. And we've evolved brave too.

154
00:08:31.220 --> 00:08:34.580
And so when I say machine and human learning, there's a real, um,

155
00:08:35.180 --> 00:08:36.170
set of techniques here.

156
00:08:36.200 --> 00:08:38.960
They have to fight the same fascinating problem for printing, right?

157
00:08:38.990 --> 00:08:42.620
Anytime you have a little bit of storage in the browser associated with a

158
00:08:42.621 --> 00:08:47.360
website. If the bag I can get 32 websites, each one has a bit of storage.

159
00:08:47.361 --> 00:08:51.860
That's 32 bits. You can turn the bit on or off. You can make 4 billion numbers.

160
00:08:51.861 --> 00:08:55.890
You can make an identifier. It's called a super cookie. Sometimes it's a

161
00:08:57.510 --> 00:09:00.390
weaker ways that are statistical. They're called fingerprinting.

162
00:09:00.391 --> 00:09:02.970
You have to block all of them and you have to not only automate,

163
00:09:03.410 --> 00:09:08.340
you want to work in the web standards body to put privacy in by default,

164
00:09:08.370 --> 00:09:11.910
by design, from the get go, not added as an afterthought or, you know,

165
00:09:11.911 --> 00:09:13.800
go hog-wild with new web APIs,

166
00:09:13.860 --> 00:09:17.580
add a bunch more local storage or fingerprint surface area.

167
00:09:18.090 --> 00:09:19.260
And that's been a struggle too,

168
00:09:19.261 --> 00:09:22.890
because guess who's the new Microsoft in the standards body it's Google,

169
00:09:23.280 --> 00:09:26.880
and they're not in favor of privacy first. They,

170
00:09:27.000 --> 00:09:31.290
they want to do privacy their way only under, I would say market pressure,

171
00:09:31.740 --> 00:09:34.470
but with Apple and with brave leading the way we,

172
00:09:34.471 --> 00:09:38.520
we block third party cookies almost without exception. So we just blocked them.

173
00:09:38.521 --> 00:09:42.120
And that gives us a very strong privacy, uh, benefit.

174
00:09:42.121 --> 00:09:44.280
But it also means some sites just don't work right.

175
00:09:44.340 --> 00:09:46.080
Embedded YouTube videos find that work, right?

176
00:09:46.081 --> 00:09:50.670
So we're adapting in similar way to, Apple's done with ITP to make,

177
00:09:51.360 --> 00:09:53.220
um, third party cookies blocked,

178
00:09:53.250 --> 00:09:58.020
but to sort of simulate what looks like a working third party

179
00:09:58.021 --> 00:09:59.160
cookie for the site,

180
00:09:59.600 --> 00:10:04.500
it essentially tries to partition each site and its third parties into its own

181
00:10:04.501 --> 00:10:05.334
sort of thing.

182
00:10:05.420 --> 00:10:09.500
<v 0>Got it. And so, and like, like you said, is this both like a human,</v>

183
00:10:10.490 --> 00:10:13.190
uh, fine tuning issue and a machine learning problem.

184
00:10:14.060 --> 00:10:16.760
<v 1>So humans learn, then they train the machine learning.</v>

185
00:10:16.970 --> 00:10:18.380
<v 0>But you know, uh,</v>

186
00:10:18.440 --> 00:10:22.760
maybe Google side or including Google there's millions of dollars,

187
00:10:22.761 --> 00:10:27.680
if not be billions of dollars to be made from fighting the ways

188
00:10:27.681 --> 00:10:28.430
of brains.

189
00:10:28.430 --> 00:10:32.600
<v 1>That's right. And it's been a interesting change from when we started in 2015,</v>

190
00:10:32.601 --> 00:10:33.890
when we started, you know,

191
00:10:33.891 --> 00:10:37.190
ad blocking extensions ad block plus was one of the big ones it's sort of in

192
00:10:37.191 --> 00:10:38.600
Firefox in 2006,

193
00:10:38.601 --> 00:10:42.350
I believe had gotten to a certain level of use around the world and browsers

194
00:10:42.351 --> 00:10:43.320
like see web,

195
00:10:43.430 --> 00:10:47.090
you see browser in Asia had some amount of ad blocking built in and on by

196
00:10:47.091 --> 00:10:50.330
default. So a page fare was a startup, uh,

197
00:10:51.080 --> 00:10:55.670
and they measured ad blocking adoption. And they tried to say, Hey publishers,

198
00:10:56.030 --> 00:10:57.080
you're, you know,

199
00:10:57.110 --> 00:11:02.090
30% of the visitors to a Pitchfork are wired to kind of Nass properties or

200
00:11:02.091 --> 00:11:03.020
using ad blockers.

201
00:11:03.440 --> 00:11:07.460
If we can somehow convince them to lower their ad blocking for your site,

202
00:11:07.910 --> 00:11:12.620
that could be like a 43% lift. Right. Um, and the three sevens,

203
00:11:12.650 --> 00:11:15.350
well that's easier said than done and paid is.

204
00:11:15.650 --> 00:11:18.800
And others source point that many others tried to either smuggle ads through or

205
00:11:18.801 --> 00:11:23.720
cajole the user into letting ads appear. And it didn't really work.

206
00:11:23.721 --> 00:11:24.081
And meanwhile,

207
00:11:24.081 --> 00:11:28.070
the ad blocking adoptions just continued intelligent tracking prevention Safari

208
00:11:28.071 --> 00:11:29.690
in 2017,

209
00:11:30.500 --> 00:11:34.580
brave from 2016 on with very strong cookie blocking and other protections.

210
00:11:35.090 --> 00:11:39.110
And this, this is not going away. The publishers used to rage against it.

211
00:11:39.111 --> 00:11:41.030
Like we would try to say, we can help you.

212
00:11:41.060 --> 00:11:44.330
You're dealing with users who are already blocking all your ads.

213
00:11:44.690 --> 00:11:48.770
We can try to put back, uh, some economics that help the user and you,

214
00:11:49.040 --> 00:11:51.560
that led to the basic attention token that we started with Bitcoin.

215
00:11:52.040 --> 00:11:53.060
We can be your friend.

216
00:11:53.320 --> 00:11:56.590
Don't just fingerprint us as an ad-blocker and treat us as an enemy.

217
00:11:57.040 --> 00:12:00.640
But in 2015 or 16, it was like, nah, you're an ad-blocker get out of here.

218
00:12:00.641 --> 00:12:03.220
I hate you. And by 2017 or 18, it's like,

219
00:12:03.221 --> 00:12:05.500
something's happening the app walking's not stopping.

220
00:12:05.501 --> 00:12:10.300
And we're all getting sort of pulled on the Google's plantation through

221
00:12:10.690 --> 00:12:12.900
amp amp or, you know, we're,

222
00:12:12.901 --> 00:12:16.030
we're getting killed by the Google ads system we use because it's taken all the

223
00:12:16.031 --> 00:12:17.650
revenue or, you know,

224
00:12:17.800 --> 00:12:20.710
it's permitting or some other vendors we use are permitting ad fraud.

225
00:12:20.711 --> 00:12:25.090
And so a fake New York times is getting paid by the market or running an ad that

226
00:12:25.300 --> 00:12:29.830
a bot clicks on and the real New York times it's supposed to get that it doesn't

227
00:12:29.831 --> 00:12:33.010
get it. Um, and there's something really broken about that kind of system.

228
00:12:33.160 --> 00:12:37.270
And that, that fraud is mediated through Google's ad exchange,

229
00:12:37.271 --> 00:12:39.730
which is the biggest of them all. And Google takes a fee.

230
00:12:40.240 --> 00:12:42.580
There's a flip side of that, which is malware distribution.

231
00:12:42.610 --> 00:12:47.170
Malvertising where fake advertisers put malware payloads in

232
00:12:47.710 --> 00:12:49.930
or low explicate loaders in JavaScript.

233
00:12:49.931 --> 00:12:52.510
And they smuggled them in ads onto real publisher pages.

234
00:12:53.050 --> 00:12:56.140
The ad exchange takes the fee. Now I'm not a lawyer.

235
00:12:56.141 --> 00:12:57.700
I'm not going to say this is a Rico predicate,

236
00:12:57.701 --> 00:13:01.930
but why is the ad exchange facilitating fraud and malware distribution and

237
00:13:01.931 --> 00:13:03.190
taking a feed? It's not right.

