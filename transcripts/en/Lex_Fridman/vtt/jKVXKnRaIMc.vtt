WEBVTT

1
00:00:03.220 --> 00:00:06.680
<v 0>How much, uh, technical difficulties there with the programming,</v>

2
00:00:06.910 --> 00:00:08.840
like what programming language you were talking about?

3
00:00:09.120 --> 00:00:13.520
<v 1>What, what of zero? I like, maybe it was hard for us, but, um, I mean, we,</v>

4
00:00:15.090 --> 00:00:15.923
there was nothing,

5
00:00:16.180 --> 00:00:20.920
the only thing that was complex about Instagram at the beginning technically

6
00:00:21.340 --> 00:00:26.270
was making it scale and we were just plain objective C

7
00:00:26.370 --> 00:00:27.950
for the client. Uh, so.

8
00:00:27.950 --> 00:00:28.990
<v 0>It was iPhone only.</v>

9
00:00:29.190 --> 00:00:30.430
<v 1>At first iPhone. Oh, only. Yep.</v>

10
00:00:30.770 --> 00:00:32.870
<v 0>As, as an Android person, I'm deeply offended.</v>

11
00:00:32.890 --> 00:00:37.030
<v 1>But go ahead. Come on. This was 2010. Oh, sure, sure. Sorry. Sorry.</v>

12
00:00:37.031 --> 00:00:41.550
Android's on a lot better. Right. So, um, I'd take it back. You're right.

13
00:00:41.551 --> 00:00:42.910
If I were to do something today,

14
00:00:42.990 --> 00:00:46.380
I think it would be very different in terms of launch strategy. Right.

15
00:00:46.410 --> 00:00:50.660
Android's enormous too. Uh, but anyway, um, back to that moment,

16
00:00:51.000 --> 00:00:52.980
it was objective C uh,

17
00:00:53.240 --> 00:00:57.620
and then we were Python based, uh, which is just like,

18
00:00:57.930 --> 00:01:00.900
this is before Python was really cool. Mm-hmm &lt;affirmative&gt; like now it's cool.

19
00:01:01.180 --> 00:01:03.660
Cuz it's all these machine learning libraries like support Python.

20
00:01:03.760 --> 00:01:08.370
And right now it's super now it's like cool to be Python back then.

21
00:01:08.371 --> 00:01:12.170
It was like, oh, Google uses Python. Like maybe you should use Python.

22
00:01:12.690 --> 00:01:14.050
Facebook was PHP.

23
00:01:14.240 --> 00:01:18.930
Like I had worked at a small startup of some ex Googlers that used Python.

24
00:01:19.070 --> 00:01:22.170
So we used it and we used a framework called Jeno, uh,

25
00:01:22.260 --> 00:01:26.920
still exists and people used, uh, for basically the back end.

26
00:01:27.140 --> 00:01:30.240
And then we threw a couple interesting things in there. I mean,

27
00:01:30.241 --> 00:01:32.000
we used Postgres, which was kind of fun.

28
00:01:32.001 --> 00:01:34.640
It was a little bit like hipster database at the time. Right.

29
00:01:34.840 --> 00:01:37.840
Which was my sequel, my SQL, like everyone used my SQLs.

30
00:01:37.960 --> 00:01:41.360
So like using Postgres was like an interesting decision. Right. Uh,

31
00:01:41.860 --> 00:01:44.320
but we used it because it had a bunch of, uh,

32
00:01:44.420 --> 00:01:47.430
geo feature built in because we thought we were gonna be a checking app.

33
00:01:47.630 --> 00:01:51.150
<v 0>Remember it's also super cool. Now. So you were into Python before? It was cool.</v>

34
00:01:51.330 --> 00:01:52.190
And you were into.

35
00:01:52.230 --> 00:01:53.590
<v 1>Postgres before? It was cool. Yeah.</v>

36
00:01:53.591 --> 00:01:57.670
We were basically like not only hipster hipster photo company,

37
00:01:57.700 --> 00:01:59.910
hipster tech company. Right. Uh,

38
00:01:59.930 --> 00:02:03.830
we also adopted Reddi early and like loved it.

39
00:02:03.870 --> 00:02:08.580
I mean it solved so many problem for us and turns out that's still pretty cool,

40
00:02:09.440 --> 00:02:13.740
but the programming was very easy. It was like sign up a user, have a feed.

41
00:02:13.741 --> 00:02:16.700
There was nothing, no machine learning at all. Zero.

42
00:02:17.320 --> 00:02:20.300
<v 0>Can you get some context? How many users at each of these stages,</v>

43
00:02:20.700 --> 00:02:23.180
are we talking about a hundred users, a thousand users.

44
00:02:23.960 --> 00:02:25.420
<v 1>So the stage I just described,</v>

45
00:02:25.500 --> 00:02:30.250
I mean that tech stack lasted through probably 50 million users.

46
00:02:31.410 --> 00:02:36.290
&lt;laugh&gt; um, I mean, seriously, like you can get away with a lot with,

47
00:02:36.320 --> 00:02:38.170
with a pretty basic stack. Um,

48
00:02:38.171 --> 00:02:42.010
like I think a lot of startups try to over-engineer their solutions from the

49
00:02:42.011 --> 00:02:46.170
beginning to like really scale and you can get away with a lot that being said

50
00:02:46.960 --> 00:02:50.320
of the first two years of Instagram was literally just trying to make that stack

51
00:02:50.370 --> 00:02:54.880
scale. And it wasn't, it was, it was not a Python problem. It was, it was like,

52
00:02:55.670 --> 00:02:59.440
literally just like, where do we put the data? Like it's all coming in too fast.

53
00:02:59.710 --> 00:03:03.000
Like how do we store it? How do we make sure to be up? How do we, like,

54
00:03:04.820 --> 00:03:08.080
how do we make sure we're on the right size boxes that they have enough memory?

55
00:03:08.840 --> 00:03:10.800
Um, those were the issues, but.

56
00:03:11.100 --> 00:03:14.960
<v 0>Can you speak to the choices you make at that stage when you're growing so</v>

57
00:03:14.961 --> 00:03:15.794
quickly?

58
00:03:16.020 --> 00:03:20.870
Do you use something like somebody else's comput infrastructure or do you

59
00:03:20.871 --> 00:03:21.750
build in house.

60
00:03:22.470 --> 00:03:25.430
<v 1>Or do I'm only laughing because we, when we launched,</v>

61
00:03:25.530 --> 00:03:29.510
we had a single computer that we had rented

62
00:03:30.790 --> 00:03:33.310
in some colo space in LA. I don't even remember what it was called,

63
00:03:34.670 --> 00:03:35.630
cuz I thought that's what you did.

64
00:03:35.631 --> 00:03:38.070
When I worked at a company called OEO that became Twitter.

65
00:03:38.350 --> 00:03:41.620
I remember VI our space in San Francisco. You walked in,

66
00:03:41.621 --> 00:03:46.100
you had to wear the ear things and it was cold and fans everywhere. Right.

67
00:03:46.680 --> 00:03:50.700
And we had to, you know, plug one out, replace one and I was the intern.

68
00:03:50.701 --> 00:03:54.580
So I just like held things. But I thought to myself, oh, this is how it goes.

69
00:03:54.720 --> 00:03:56.700
And then I remember being in a VC's office,

70
00:03:58.260 --> 00:03:59.810
I think it was benchmarks off this.

71
00:04:00.050 --> 00:04:02.730
And I think we ran into another entrepreneur and they were like, oh,

72
00:04:02.731 --> 00:04:05.970
how are things going? We're like, uh, you know, trying to scale this thing.

73
00:04:06.550 --> 00:04:09.730
And they were like, well, I mean, can't you just add more instances?

74
00:04:09.731 --> 00:04:13.370
And I was like, what do you mean? And they're like instances on Amazon.

75
00:04:13.490 --> 00:04:14.490
I was like, what are those?

76
00:04:15.310 --> 00:04:19.570
And it was this moment where we realized how deep in it we were because we had

77
00:04:19.571 --> 00:04:24.200
no idea that AWS AWS existed, nor should we be using it.

78
00:04:24.220 --> 00:04:28.320
Anyway that night we went back to the office and we got on AWS. But we,

79
00:04:28.420 --> 00:04:33.280
we did this really dumb thing where I'm so sorry to people listening. But um,

80
00:04:34.540 --> 00:04:37.400
we brought up an instance which was our, our database.

81
00:04:38.320 --> 00:04:39.880
It's gonna be a replacement for our database,

82
00:04:40.770 --> 00:04:44.990
but we had it talking over the public internet to our little box in LA.

83
00:04:44.991 --> 00:04:49.790
That was our app server. Very nice. Yeah. Um, that's how sophisticated we were.

84
00:04:49.810 --> 00:04:52.590
And obviously that was very, very slow mm-hmm &lt;affirmative&gt; um,

85
00:04:52.610 --> 00:04:54.310
didn't work at all. I mean, it worked,

86
00:04:54.410 --> 00:04:58.270
but didn't work didn't we only like later that night did we realize we had to

87
00:04:58.271 --> 00:04:59.190
have it all together?

88
00:04:59.630 --> 00:05:02.380
Mm-hmm &lt;affirmative&gt; but at least like if you're listening right now and you're

89
00:05:02.381 --> 00:05:06.060
thinking, you know, I have no chance I'm gonna start a start. I have no chance.

90
00:05:06.860 --> 00:05:10.060
I don't know we did it. And we made a bunch of really dumb mistakes. Initially.

91
00:05:10.540 --> 00:05:11.280
I think the question is,

92
00:05:11.280 --> 00:05:14.380
how quickly do you learn that you're making a mistake and do you do the right

93
00:05:14.381 --> 00:05:15.900
thing immediately right after.

94
00:05:16.200 --> 00:05:19.780
<v 0>So you didn't pay for those mistakes by, you know, by failure.</v>

95
00:05:20.080 --> 00:05:23.050
So how, yeah. How quickly did you fix it?

96
00:05:23.770 --> 00:05:27.050
I guess there's a lot of ways to sneak up to this question of how the hell do

97
00:05:27.051 --> 00:05:30.810
you scale the thing, uh, other startups, if you have an idea, how do you scale?

98
00:05:30.830 --> 00:05:34.650
The thing is, is just AWS. And uh,

99
00:05:35.510 --> 00:05:37.410
you try to write the kind of code.

100
00:05:37.430 --> 00:05:41.970
That's easy to spread across a large number of instances. And then,

101
00:05:42.800 --> 00:05:44.840
and the rest is just put money into it.

102
00:05:45.990 --> 00:05:50.960
<v 1>Basically. I would say a couple things first off, don't even ask the question,</v>

103
00:05:51.390 --> 00:05:55.200
just find product market fit, duct, tape it together, right?

104
00:05:55.230 --> 00:05:59.120
Like if you have to, I think there's a big caveat here, which I wanna get to.

105
00:06:00.300 --> 00:06:04.320
But generally all that matters is product market fit. That's all that matters.

106
00:06:04.660 --> 00:06:09.600
If people like your product do not worry about when 50,000 people use

107
00:06:09.601 --> 00:06:12.360
your product because you will be happy that you have that problem.

108
00:06:12.430 --> 00:06:16.200
When you get there. I actually can't name many

109
00:06:17.830 --> 00:06:22.830
startups where they go from nothing to something overnight and they can't figure

110
00:06:22.831 --> 00:06:27.830
out how to scale it. There are some, but I think nowadays it's a,

111
00:06:28.060 --> 00:06:31.790
when I say a solved problem, like there are ways of solving it.

112
00:06:32.970 --> 00:06:33.711
The base cases,

113
00:06:33.711 --> 00:06:38.580
typically that startups worry way too much about way too early and forget that

114
00:06:38.581 --> 00:06:40.940
they actually have to make something that people like. That's the,

115
00:06:40.960 --> 00:06:44.820
that's the default mistake case. But what I'll say is, um,

116
00:06:45.690 --> 00:06:49.260
once you start scaling, I mean hiring quickly,

117
00:06:49.520 --> 00:06:53.460
people who have seen the game before and just know how to do it, it, it becomes,

118
00:06:53.980 --> 00:06:58.210
um, it becomes a bit of like, yeah, just throw instances. Is that the problem?

119
00:06:58.211 --> 00:07:02.330
Right? Got it. But the last thing I'll say on this that I think did save us. Um,

120
00:07:03.310 --> 00:07:06.450
we were pretty rigorous about writing tests, uh,

121
00:07:06.451 --> 00:07:10.690
from the beginning that helped us move very,

122
00:07:10.691 --> 00:07:14.970
very quickly when we wanted to rewrite parts of the product and know that we

123
00:07:14.971 --> 00:07:18.560
weren't breaking something else, tests are one of those things where it's like,

124
00:07:18.580 --> 00:07:22.720
you go slow to go fast and they suck when you have to write them,

125
00:07:22.920 --> 00:07:24.160
cuz you have to figure it out. And

126
00:07:25.720 --> 00:07:27.960
they're always those ones that break when you don't want them to break.

127
00:07:28.020 --> 00:07:30.240
And they're annoying and it feels like you spend all this time,

128
00:07:30.300 --> 00:07:34.120
but looking back, I think that like long term optimal,

129
00:07:34.510 --> 00:07:37.840
even with the team of four, it allowed us to move very,

130
00:07:37.841 --> 00:07:41.030
very quickly because anyone could touch any part of the, the,

131
00:07:41.310 --> 00:07:45.150
the product and know that they weren't gonna bring down the site or at least in

132
00:07:45.151 --> 00:07:46.190
general, at which.

133
00:07:46.190 --> 00:07:49.990
<v 0>Point do you know product market fit? How many users would you say?</v>

134
00:07:50.410 --> 00:07:54.630
Is it all it takes is like 10 people or is it a thousand? Is it 50,000?

135
00:07:55.710 --> 00:07:59.540
<v 1>I don't think it is generally a question of absolutely numbers.</v>

136
00:07:59.780 --> 00:08:04.140
I think it's a question of cohorts and I think it's a question of trends. So,

137
00:08:05.800 --> 00:08:09.180
you know, it depends how big your business is trying to be. Right.

138
00:08:09.360 --> 00:08:14.300
But if I were signing up a thousand people a week and they all retain like the

139
00:08:14.301 --> 00:08:18.900
retention curves for those cohorts looked good, healthy. And even like,

140
00:08:19.590 --> 00:08:21.650
as you started getting more people on the service,

141
00:08:21.700 --> 00:08:24.410
maybe those earlier cohorts started curving up again,

142
00:08:24.411 --> 00:08:27.410
because now there are network effects and their friends are on the service or

143
00:08:27.720 --> 00:08:30.810
totally depends what type of business you're in, but I'm talking purely social.

144
00:08:30.820 --> 00:08:35.730
Right. Um, I don't think it's an absolute, uh,

145
00:08:35.750 --> 00:08:39.450
number. I think it is a, I guess you could call it a marginal number.

146
00:08:39.470 --> 00:08:43.880
So I spent lot of time when I work with startups asking them like, okay,

147
00:08:44.190 --> 00:08:46.800
have you looked at that cohort versus this cohort?

148
00:08:46.830 --> 00:08:50.480
Whether it's your clients or whether it's people signing up for, uh,

149
00:08:50.500 --> 00:08:54.920
the service. But a lot of people think you just have to hit some mark,

150
00:08:54.960 --> 00:08:56.960
like 10,000 people or 50,000 people,

151
00:08:57.660 --> 00:09:01.440
but really seven ish billion people in the world.

152
00:09:01.870 --> 00:09:04.720
Most people forever will not know about your product.

153
00:09:05.010 --> 00:09:07.320
There are always more people out there to sign up.

154
00:09:07.710 --> 00:09:10.480
It's just a question of how you turn on the spigot. So.

