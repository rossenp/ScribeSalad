WEBVTT

1
00:00:00.300 --> 00:00:01.320
<v 0>Dear fellow scholars.</v>

2
00:00:01.530 --> 00:00:05.160
This is two minute papers with [inaudible] in a recent video,

3
00:00:05.400 --> 00:00:10.290
we showcased a computer graphics technique that simulated the process of baking.

4
00:00:10.680 --> 00:00:14.610
And now it's time to discuss a paper that is about simulating,

5
00:00:14.730 --> 00:00:16.980
how we can tear this loaf of bread apart.

6
00:00:17.670 --> 00:00:21.630
This paper aligns well with the favorite pastimes of a computer graphics

7
00:00:21.631 --> 00:00:22.464
researcher,

8
00:00:22.620 --> 00:00:27.330
which is of course destroying virtual objects in a spectacular fashion.

9
00:00:27.750 --> 00:00:28.920
Like the previous work,

10
00:00:29.010 --> 00:00:32.640
this new paper also builds on top of the material point method,

11
00:00:32.910 --> 00:00:37.710
a hybrid simulation technique that uses both particles and grids to create

12
00:00:37.711 --> 00:00:40.080
these beautiful animations. However,

13
00:00:40.530 --> 00:00:44.190
it traditionally does not support simulating, cracking and tearing phenomenon.

14
00:00:44.970 --> 00:00:49.200
Now have a look at this little work and Marvel at how beautiful it is.

15
00:00:49.201 --> 00:00:53.850
Phenomenon is simulated here with this. We can smash Oreos,

16
00:00:54.420 --> 00:00:58.170
candy, crabs pumpkin's and much, much more.

17
00:00:58.680 --> 00:01:02.970
This jelly fracture scene is my absolute favorite. Now,

18
00:01:03.030 --> 00:01:05.160
when an artist works with the simulations,

19
00:01:05.400 --> 00:01:10.350
the issue of artistic control often comes up after all this method is

20
00:01:10.351 --> 00:01:13.500
meant to compute these phenomena by simulating physics.

21
00:01:13.740 --> 00:01:18.270
And we can just instruct physics to be more beautiful or can we,

22
00:01:18.780 --> 00:01:19.320
well,

23
00:01:19.320 --> 00:01:23.040
this technique offers us plenty of parameters to tune the simulation to our

24
00:01:23.041 --> 00:01:26.160
liking to that we'll know today are the alpha,

25
00:01:26.460 --> 00:01:30.180
which means the hardening and beta is the cohesion parameter.

26
00:01:30.750 --> 00:01:35.370
So what does that mean? Exactly? Well, beta was cohesion,

27
00:01:35.610 --> 00:01:39.270
which is the force that holds a matter together. So as we go to the right,

28
00:01:39.360 --> 00:01:41.310
the objects stay more intact.

29
00:01:41.670 --> 00:01:45.690
And as we go down the objects shatter into more and more pieces,

30
00:01:46.200 --> 00:01:50.310
the method offers us more parameters than these, but even with these two,

31
00:01:50.370 --> 00:01:54.180
we can really make the kind of simulation we are looking for. Huh?

32
00:01:54.210 --> 00:01:56.010
What the heck? Let's do two more.

33
00:01:56.400 --> 00:02:00.270
We can even control the way the cracks form with the MC parameter,

34
00:02:00.480 --> 00:02:02.580
which is the speed of crack propagation.

35
00:02:07.400 --> 00:02:12.020
And G is the energy release, which as we look to the right increases,

36
00:02:12.021 --> 00:02:16.280
the object's resistance to damage. So how long does this take?

37
00:02:16.820 --> 00:02:19.130
Well, the technique takes its sweet time.

38
00:02:19.370 --> 00:02:24.050
The execution timings range from 17 seconds to about 10 minutes per frame.

39
00:02:24.440 --> 00:02:28.400
This is one of those methods that does something that wasn't possible before.

40
00:02:28.700 --> 00:02:30.830
And it is about doing things correctly.

41
00:02:31.310 --> 00:02:35.660
And after a paper appears on something that makes the impossible possible

42
00:02:36.320 --> 00:02:37.220
follow up research works,

43
00:02:37.221 --> 00:02:42.170
get published later that further refine and optimize it. So as we say,

44
00:02:42.350 --> 00:02:45.800
two more papers down the line, and this will run much faster.

45
00:02:46.280 --> 00:02:49.970
Now a word about the first author of the paper, Joshua Whopper,

46
00:02:50.390 --> 00:02:52.880
strictly speaking, it is his third paper,

47
00:02:53.210 --> 00:02:56.780
but only the second within computer graphics. And my goodness.

48
00:02:56.930 --> 00:02:58.910
Did he come back with guns blazing?

49
00:02:59.230 --> 00:03:01.720
This paper was accepted to the SIGGRAPH conference,

50
00:03:01.840 --> 00:03:03.370
which is one of the biggest honors.

51
00:03:03.370 --> 00:03:08.010
A computer graphics researcher can get perhaps to the Olympic gold

52
00:03:08.011 --> 00:03:11.760
medal for an athlete. It definitely is worthy of a gold medal.

53
00:03:12.150 --> 00:03:14.030
Make sure to have a look at the paper in the video,

54
00:03:14.880 --> 00:03:19.410
it is an absolutely beautifully crafted piece of work. Congratulations, Joshua,

55
00:03:19.980 --> 00:03:24.300
this episode has been supported by Lambda. If you're a researcher or a startup,

56
00:03:24.510 --> 00:03:27.480
looking for cheap GPU compute to run these algorithms,

57
00:03:27.660 --> 00:03:31.140
check out Lambda GPU cloud. I've talked about Lambdas,

58
00:03:31.170 --> 00:03:33.120
GPU workstations in other videos,

59
00:03:33.670 --> 00:03:37.200
happy to tell you that they are offering GPU cloud services as well.

60
00:03:37.500 --> 00:03:42.270
The Lambda GPU cloud can train image net to 93% accuracy for

61
00:03:42.271 --> 00:03:45.600
less than $19 Lambda as a web based ID.

62
00:03:46.020 --> 00:03:50.190
He lets you easily access your instance right in your browser. And finally,

63
00:03:50.400 --> 00:03:55.380
hold on your papers because the Lambda GPU cloud costs less than half of ADW,

64
00:03:55.381 --> 00:03:56.670
U S and Asia.

65
00:03:57.000 --> 00:04:01.920
Make sure to go to Lambda labs.com/papers and sign up for one of their amazing

66
00:04:01.921 --> 00:04:06.780
GPU instances today. Our thanks to Lambda for having us better videos for you.

67
00:04:07.170 --> 00:04:11.100
Thanks for watching and for your generous support. And I'll see you next time.

