WEBVTT

1
00:00:00.450 --> 00:00:04.290
<v 0>Dear fellow scholars. This is two minute papers with Dr. [inaudible].</v>

2
00:00:05.120 --> 00:00:08.300
<v 1>Ease your eyes upon the simulation from our previous episode,</v>

3
00:00:08.330 --> 00:00:12.440
that showcases a high viscosity material. That is honey.

4
00:00:12.860 --> 00:00:17.330
The fact that honey is viscous means that it is a material that is highly

5
00:00:17.331 --> 00:00:22.040
resistant against defamation. In simpler words, if we can simulate viscosity,

6
00:00:22.041 --> 00:00:26.900
well, we can engage in a favorite pastimes of the computer graphics researcher,

7
00:00:27.170 --> 00:00:31.550
or in other words, take some of these letters, throw them around,

8
00:00:31.790 --> 00:00:34.310
watch them slowly lose their previous shapes.

9
00:00:34.610 --> 00:00:38.540
And then of course destroy them in a spectacular manner.

10
00:00:39.080 --> 00:00:42.530
I love making simulations like this. And when I do,

11
00:00:42.680 --> 00:00:44.630
I want to see a lot of detail,

12
00:00:44.810 --> 00:00:49.520
which unfortunately means that I also have to run the simulations for a long

13
00:00:49.521 --> 00:00:50.300
time.

14
00:00:50.300 --> 00:00:54.950
So when I saw that this new technique promises to compute these about four

15
00:00:54.951 --> 00:00:57.830
times faster, it really grabbed my attention.

16
00:00:58.580 --> 00:01:01.340
Here is a visual demonstration of such a speed difference.

17
00:01:03.170 --> 00:01:07.400
So four times you'll say that sounds fantastic,

18
00:01:07.910 --> 00:01:09.560
but what's the catch here.

19
00:01:09.860 --> 00:01:13.010
This kind of speed up usually comes with cutting corners.

20
00:01:13.310 --> 00:01:17.780
So let's test the might of this new method through three examples of

21
00:01:17.810 --> 00:01:21.080
increasing difficulty experiment. Number one,

22
00:01:21.380 --> 00:01:25.340
here is the regular simulation and here is the new technique.

23
00:01:25.790 --> 00:01:30.470
So let's see the quality differences one more time.

24
00:01:31.130 --> 00:01:32.780
Well, I don't see any,

25
00:01:33.220 --> 00:01:37.730
do you four times faster with no degradation in

26
00:01:37.731 --> 00:01:40.820
quality? Hmm. So far so good.

27
00:01:41.060 --> 00:01:45.830
So now let's give it a harder example, experiment. Number two,

28
00:01:46.280 --> 00:01:49.970
varying viscosities and temperatures. In other words,

29
00:01:50.090 --> 00:01:54.350
let's give this bunny a hot shower. That was beautiful.

30
00:01:54.470 --> 00:01:55.970
And our question is again,

31
00:01:56.240 --> 00:02:01.040
how close is this to the slow reference simulation? Wow,

32
00:02:01.310 --> 00:02:02.840
this is really close.

33
00:02:03.260 --> 00:02:07.910
I have to look carefully to even have a fighting chance in finding a difference

34
00:02:08.810 --> 00:02:10.700
check Mark. And I also wonder,

35
00:02:11.270 --> 00:02:15.980
can he deal with extremely detailed simulations and now hold onto your

36
00:02:15.981 --> 00:02:18.410
papers for experiment. Number three,

37
00:02:18.740 --> 00:02:21.500
dropping a viscose bunny on thin wires,

38
00:02:21.860 --> 00:02:25.490
and just look at the remnants of the poor bunny stuck in there,

39
00:02:26.210 --> 00:02:30.320
loving it now for almost every episode of this paper,

40
00:02:30.560 --> 00:02:33.860
I get comments saying caraway, and this is all great,

41
00:02:34.040 --> 00:02:38.450
but when do I get to use this? When does this make it to the real world?

42
00:02:38.990 --> 00:02:43.070
These questions are completely justified and the answer is, uh,

43
00:02:43.071 --> 00:02:46.550
right about now you can use this right now.

44
00:02:46.850 --> 00:02:51.620
This paper was published in 2019 and now it appears to be

45
00:02:51.650 --> 00:02:53.270
already part of Houdini.

46
00:02:53.420 --> 00:02:57.800
One of the industry standard programs for visual effects and physics simulations

47
00:02:58.160 --> 00:03:01.990
tech transfer in just one year. Wow,

48
00:03:02.410 --> 00:03:06.730
huge congratulations to Ryan Goldade and his colleagues for this incredible

49
00:03:06.731 --> 00:03:11.440
paper and huge respect to the folks at Houdini who keep outdoing

50
00:03:11.441 --> 00:03:13.570
themselves with these amazing updates.

51
00:03:14.290 --> 00:03:18.280
This episode has been supported by weights and biases in this post.

52
00:03:18.340 --> 00:03:22.990
They show you how to monitor and optimize your GPO consumption during model

53
00:03:22.991 --> 00:03:27.940
training in real time with one line of code weights and biases provides

54
00:03:27.941 --> 00:03:31.060
tools to track your experiments in your deep learning project,

55
00:03:31.180 --> 00:03:34.600
their system is designed to save you a ton of time and money,

56
00:03:34.810 --> 00:03:37.960
and it is actively used in projects at prestigious labs,

57
00:03:38.020 --> 00:03:41.770
such as open AI Toyota research GitHub and more.

58
00:03:42.160 --> 00:03:46.300
And the best part is that weights and biases is free for all individuals

59
00:03:46.510 --> 00:03:51.070
academics and open source projects. It really is as good as it gets,

60
00:03:51.400 --> 00:03:55.150
make sure to visit them through wnb.com/papers,

61
00:03:55.450 --> 00:03:58.000
or just click the link in the video description.

62
00:03:58.150 --> 00:04:00.010
And you can get the free demo today.

63
00:04:00.310 --> 00:04:04.270
Our thanks to weights and biases for their longstanding support and for helping

64
00:04:04.271 --> 00:04:05.830
us make better videos for you.

65
00:04:06.070 --> 00:04:10.090
Thanks for watching and for your generous support. And I'll see you next time.

