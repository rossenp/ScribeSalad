WEBVTT

1
00:00:00.330 --> 00:00:04.320
<v 0>Dear fellow scholars. This is two minute papers with Dr. Károly Zsolnai-Fehér.</v>

2
00:00:04.320 --> 00:00:04.320
We have showcased this paper just a few months ago, which was about creating virtual characters with 

3
00:00:04.320 --> 00:00:04.320
a skeletal system, adding more depth

4
00:00:04.320 --> 00:00:04.320
, 300 muscles, and teaching them to use these muscles to kick, jump, move around and perform 

5
00:00:04.320 --> 00:00:04.320
other

6
00:00:04.320 --> 00:00:04.320
 realistic human movements. It came with really cool insights as it could portray how increasing the amount of weight to be lifted changes what muscles are being trained during 

7
00:00:04.320 --> 00:00:04.320
the workout. These agents also learned

8
00:00:04.320 --> 00:00:05.153
 to jump really high and you can see a drastic difference between the movement required for a mediocre jump and an amazing one beyond that, it showed us how these virtual characters would move. If they were hamstrung by bone deformities, stiff ankle or muscle deficiencies, and watch them learn to walk. Despite these setbacks, we could even have a look at the improvements after a virtual surgery takes place.

9
00:00:59.250 --> 00:01:04.140
So now how about an even more elaborate technique that focuses more on the

10
00:01:04.141 --> 00:01:05.400
muscle simulation part?

11
00:01:06.150 --> 00:01:10.500
The ropes here are simulated in a way that the only interesting property of the

12
00:01:10.501 --> 00:01:14.640
particles holding them together is position Casa rat,

13
00:01:14.910 --> 00:01:18.960
rod simulations are an improvement because they also take into consideration the

14
00:01:18.961 --> 00:01:23.340
orientation of the particles and Hans can simulate twists as well.

15
00:01:24.030 --> 00:01:28.770
And this new technique is called Viper and add a scale property to these

16
00:01:28.771 --> 00:01:33.270
particles and hands takes into consideration stretching and

17
00:01:33.300 --> 00:01:36.090
compression. What does that mean? Well,

18
00:01:36.120 --> 00:01:40.080
it means that this can be used for a lot of muscle related simulation problems

19
00:01:40.260 --> 00:01:42.900
that you will see in a moment. However,

20
00:01:42.960 --> 00:01:47.730
before that an important part is inserting these objects into our simulations,

21
00:01:48.210 --> 00:01:52.350
the cool thing is that we don't need to get an artist to break up these surfaces

22
00:01:52.410 --> 00:01:56.250
into muscle fibers. That will not only be too laborious,

23
00:01:56.550 --> 00:02:01.470
but of course would also require a great deal of anatomical knowledge. Instead,

24
00:02:01.530 --> 00:02:06.330
this technique does all this automatically the process that the authors call

25
00:02:06.660 --> 00:02:07.770
Viper ization.

26
00:02:08.460 --> 00:02:13.050
So in goes the geometry and outcomes and nice muscle model.

27
00:02:13.560 --> 00:02:18.060
This really opens up a world of really cool applications. For instance,

28
00:02:18.150 --> 00:02:21.000
one such application is muscle movement simulation.

29
00:02:21.450 --> 00:02:25.200
When attaching the muscles to bones, as we move the character,

30
00:02:25.440 --> 00:02:28.110
the muscles move and contract accurately

31
00:02:31.370 --> 00:02:34.700
tool, it can also perform muscle growth simulations

32
00:02:41.270 --> 00:02:44.630
and three, we get more accurate soft body physics.

33
00:02:45.110 --> 00:02:49.520
Or in other words, we can animate GUI characters like this octopus.

34
00:02:50.630 --> 00:02:54.800
Okay. That all sounds great, but how expensive is this?

35
00:02:55.220 --> 00:02:59.620
Do we have to wait a few seconds, two minutes to get this? Not at all,

36
00:02:59.830 --> 00:03:00.663
not at all.

37
00:03:00.940 --> 00:03:05.680
This technique is really efficient and runs in milliseconds so we can throw in a

38
00:03:05.681 --> 00:03:06.730
couple of more objects.

39
00:03:07.240 --> 00:03:11.560
And by couple a computer graphics researcher always means a couple of dozen

40
00:03:11.561 --> 00:03:14.200
more, of course. And in the meantime,

41
00:03:14.350 --> 00:03:17.020
let's look carefully at the simulation timings.

42
00:03:17.890 --> 00:03:20.770
It starts from around eight to nine milliseconds per frame.

43
00:03:21.130 --> 00:03:22.810
And with all these octopi,

44
00:03:22.930 --> 00:03:26.080
we are still hovering around 10 milliseconds per frame.

45
00:03:26.650 --> 00:03:28.480
That's a hundred frames per second,

46
00:03:28.600 --> 00:03:32.590
which means that the algorithm scales with the complexity of the scenes really

47
00:03:32.591 --> 00:03:35.380
well. This is one of those rare papers.

48
00:03:35.680 --> 00:03:40.000
It is written both very precisely and it is absolutely

49
00:03:40.030 --> 00:03:43.060
beautiful. Make sure to have a look in the video description.

50
00:03:43.360 --> 00:03:46.750
The source code of the project is also available with this.

51
00:03:46.900 --> 00:03:51.340
I hope we'll get even more realistic characters with real muscle models in our

52
00:03:51.341 --> 00:03:55.810
computer games and real time applications. What a time to be alive.

53
00:03:56.200 --> 00:04:00.610
This episode has been supported by Lambda. If you are a researcher or a startup,

54
00:04:00.670 --> 00:04:03.700
looking for cheap GPU compute to run these algorithms,

55
00:04:03.850 --> 00:04:07.570
check out Lambda GPU cloud. I've talked about Lambdas,

56
00:04:07.600 --> 00:04:09.580
GPU workstations in other videos,

57
00:04:09.790 --> 00:04:13.930
and I'm happy to tell you that they are offering GPU cloud services as well.

58
00:04:14.230 --> 00:04:19.090
The Lambda GPU cloud can train image net to 93% accuracy for

59
00:04:19.091 --> 00:04:20.890
less than $19.

60
00:04:21.790 --> 00:04:25.480
Lambda's web based IDE lets you easily access your instance right in your

61
00:04:25.481 --> 00:04:26.314
browser.

62
00:04:26.380 --> 00:04:31.090
And finally hold onto your papers because the Lambda GPU cloud costs less than

63
00:04:31.091 --> 00:04:33.550
half of AWS and Azure.

64
00:04:33.880 --> 00:04:38.590
Make sure to go to Lambda labs.com/papers and sign up for one of their

65
00:04:38.620 --> 00:04:40.810
amazing GPU instances today. Uh,

66
00:04:40.820 --> 00:04:43.960
thanks to Lambda for helping us make better videos for you.

67
00:04:44.260 --> 00:04:48.160
Thanks for watching and for your generous support. And I'll see you next time.

